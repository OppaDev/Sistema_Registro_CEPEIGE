generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Curso {
  idCurso          Int           @id @default(autoincrement()) @map("id_curso")
  nombreCortoCurso String        @map("nombre_corto_curso") @db.VarChar(100)
  nombreCurso      String        @map("nombre_curso") @db.VarChar(100)
  descripcionCurso String        @map("descripcion_curso")
  valorCurso       Decimal       @map("valor_curso") @db.Decimal(10, 2)
  fechaInicioCurso DateTime      @map("fecha_inicio_curso") @db.Date
  fechaFinCurso    DateTime      @map("fecha_fin_curso") @db.Date

  //relaciones
  inscripciones    Inscripcion[]

  @@map("curso")
}

model DatosPersonales {
  idPersona       Int           @id @default(autoincrement()) @map("id_persona")
  ciPasaporte     String        @unique @map("ci_pasaporte") @db.VarChar(20)
  nombres         String        @map("nombres") @db.VarChar(100)
  apellidos       String        @map("apellidos") @db.VarChar(100)
  numTelefono     String        @map("num_telefono") @db.VarChar(15)
  correo          String        @map("correo") @db.VarChar(100)
  pais            String        @map("pais") @db.VarChar(30)
  provinciaEstado String        @map("provincia_estado") @db.VarChar(50)
  ciudad          String        @map("ciudad") @db.VarChar(100)
  profesion       String        @map("profesion") @db.VarChar(100)
  institucion     String        @map("institucion") @db.VarChar(100)

  //relaciones
  inscripciones   Inscripcion[]

  @@map("datos_personales")
}

model Descuento {
  idDescuento          Int           @id @default(autoincrement()) @map("id_descuento")
  tipoDescuento        String        @map("tipo_descuento") @db.VarChar(100)
  valorDescuento       Decimal       @map("valor_descuento") @db.Decimal(5, 2)
  porcentajeDescuento  Decimal       @map("porcentaje_descuento") @db.Decimal(5, 2)
  descripcionDescuento String        @map("descripcion_descuento")

  //relaciones
  inscripciones        Inscripcion[]

  @@map("descuento")
}

model DatosFacturacion {
  idFacturacion            Int           @id @default(autoincrement()) @map("id_facturacion")
  razonSocial              String        @map("razon_social") @db.VarChar(100)
  identificacionTributaria String        @map("identificacion_tributaria") @db.VarChar(50)
  telefono                 String        @map("telefono") @db.VarChar(20)
  correoFactura            String        @map("correo_factura") @db.VarChar(100)
  direccion                String        @map("direccion") @db.VarChar(250)

  //relaciones
  facturas                 Factura[]
  inscripciones            Inscripcion[]

  @@map("datos_facturacion")
}

model Inscripcion {
  idInscripcion    Int              @id @default(autoincrement()) @map("id_inscripcion")
  idCurso          Int              @map("id_curso")
  idPersona        Int              @map("id_persona")
  idDescuento      Int?             @map("id_descuento")
  idFacturacion    Int              @map("id_facturacion")
  matricula        Boolean          @default(false) @map("matricula")
  fechaInscripcion DateTime         @default(now()) @map("fecha_inscripcion") @db.Timestamp(6)
  idComprobante    Int             @unique @map("id_comprobante")

  //relaciones
  facturas         Factura[]
  comprobante      Comprobante     @relation(fields: [idComprobante], references: [idComprobante], onUpdate: Restrict)
  curso            Curso            @relation(fields: [idCurso], references: [idCurso], onUpdate: Restrict)
  descuento        Descuento?       @relation(fields: [idDescuento], references: [idDescuento], onUpdate: Restrict)
  datosFacturacion DatosFacturacion @relation(fields: [idFacturacion], references: [idFacturacion], onUpdate: Restrict)
  persona          DatosPersonales  @relation(fields: [idPersona], references: [idPersona], onUpdate: Restrict)

  @@map("inscripcion")
}

model Factura {
  idFactura        Int              @id @default(autoincrement()) @map("id_factura")
  idInscripcion    Int              @map("id_inscripcion")
  idFacturacion    Int              @map("id_facturacion")
  valorPagado      Decimal          @map("valor_pagado") @db.Decimal(10, 2)
  verificacionPago Boolean          @map("verificacion_pago")
  numeroIngreso    String           @map("numero_ingreso") @db.VarChar(100)
  numeroFactura    String           @map("numero_factura") @db.VarChar(100)

  //relaciones
  datosFacturacion DatosFacturacion @relation(fields: [idFacturacion], references: [idFacturacion], onUpdate: Restrict)
  inscripcion      Inscripcion      @relation(fields: [idInscripcion], references: [idInscripcion], onUpdate: Restrict)

  @@map("factura")
}

model Comprobante {
  idComprobante   Int          @id @default(autoincrement()) @map("id_comprobante")
  fechaSubida     DateTime     @default(now()) @map("fecha_subida") @db.Timestamp(6)
  rutaComprobante String       @map("ruta_comprobante") @db.VarChar(250)
  tipoArchivo     String       @map("tipo_archivo") @db.VarChar(50)
  nombreArchivo   String       @map("nombre_archivo") @db.VarChar(100)

  //relaciones
  inscripcion     Inscripcion?

  @@map("comprobante")
}
