services:
  # PostgreSQL Database
  database:
    image: postgres:16-alpine
    container_name: cepeige_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: inscripciones_cepeige
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin12345
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cepeige_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d inscripciones_cepeige"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cepeige_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:admin12345@database:5432/inscripciones_cepeige?schema=public
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      database:
        condition: service_healthy
    networks:
      - cepeige_network

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cepeige_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api/v1
    depends_on:
      - backend
    networks:
      - cepeige_network

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  cepeige_network:
    driver: bridge